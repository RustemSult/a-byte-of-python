# -*- coding: utf-8 -*- 


print("--- Поток команд ---\n")


## Оператор if

print("# Оператор if\n")

# Пример: (сохраните как if.py )
number = 23
guess = int(input('Введите целое число : '))

if guess == number:
    print('Поздравляю, вы угадали,') # Здесь начинается новый блок
    print('(хотя и не выиграли никакого приза!)') # Здесь заканчивается новый блок
elif guess < number:
    print('Нет, загаданное число немного больше этого.') # Ещё один блок
    # Внутри блока вы можете выполнять всё, что угодно ...
else:
    print('Нет, загаданное число немного меньше этого.')
    # чтобы попасть сюда, guess должно быть больше, чем number

print('Завершено')
# Это последнее выражение выполняется всегда после выполнения оператора if


print('\nДля завершения циклов while(break, continue), введите слово: выход')


## Оператор while

print("\n# Оператор while\n")

# Пример: (сохраните как while.py )
number = 23
running = True
while running:
    guess = int(input('Введите целое число : '))

    if guess == number:
        print('Поздравляю, вы угадали.')
        running = False # это останавливает цикл while
    elif guess < number:
        print('Нет, загаданное число немного больше этого')
    else:
        print('Нет, загаданное число немного меньше этого.')
else:
    print('Цикл while закончен.')
    # Здесь можете выполнить всё что вам ещё нужно

print('Завершение.')


## Цикл for

print("\n# Цикл for\n")

# Пример: (сохраните как for.py )
for i in range(1, 5):
    print(i)
else:
    print('Цикл for закончен')

# Помните: 
#   - интервал в range простирается только до второго
#     числа, т.е. не включает его в себя.
#   - блок else не обязателен. Если он присутствует, он всегда выполняется
#     один раз после окончания цикла for, если только не указан оператор break.
#   - цикл for..in работает для любой последовательности. В нашем случае это 
#     список чисел, сгенерированный встроенной функцией range, но в общем 
#     случае можно использовать любую последовательность любых объектов!


## Оператор break

print("\n# Оператор break\n")

# Если циклы for или while прервать оператором break, соответствующие 
# им блоки else выполняться не будут.

# Пример: (сохраните как break.py)
while True:
    s = input('Введите что-нибудь : ')
    if s == 'выход':
        break
    print('Длина строки: ', len(s))

print('Завершение')


## Оператор continue

print("\n# Оператор continue\n")

# Пример: (сохраните как continue.py)
while True:
    s = input('Введите что-нибудь : ')
    if s == 'выход':
        break
    if len(s) < 3:
        print('Слишком мало')
        continue
    print('Введённая строка достаточной длины')
    # Разные другие действия здесь...

print('Завершение')

# Заметьте, что оператор continue также работает и с циклом for.


print("\n--- End ---")
