# -*- coding: utf-8 -*- 

# для самопроверки после блока '/ ...code... /'
# удалите код, если он есть, и выполните задание повторно


x = 77

# Создайте функцию newFunc
# / ...code... /

# newFunc() # проверка функции

# Создайте функцию newFunc2 с 3 параметрами
# / ...code... /

# newFunc2()
print('Значение x составляет', x)

# Создайте функцию newFunc3 с изменением глобальных значений x
# / ...code... /

# newFunc3()
print('Значение x составляет', x)

# Создайте функцию newFunc4 с внутренней переменной x
# и c дополнительной функцией внутри, для обработки глобальных значений x
# / ...code... /

x = 15
print('Значение x составляет', x)

# newFunc4()
print('Значение x составляет', x)

# Создайте функцию newFunc5 с 1 ключевым и 2 аргументами по умолчанию
# / ...code... /

# newFunc5()

# Создайте функцию totalFunc с переменным число параметров
# / ...code... /

# print(totalFunc(8, 2))
# print(totalFunc(8, 3, 5, 1))
# print(totalFunc(8, 1, 7, 3, cars=5, rooms=10))

# Создайте функцию totalFunc2 с только ключевыми параметрами
# / ...code... /

# Создайте функцию summa оператором «return» c документацией DocStrings
# / ...code... /

# print(summa(2, 3))
# print(summa.__doc__)


print("\n--- End ---")